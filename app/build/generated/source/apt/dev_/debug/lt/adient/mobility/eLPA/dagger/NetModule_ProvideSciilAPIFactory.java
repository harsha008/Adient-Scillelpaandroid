// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package lt.adient.mobility.eLPA.dagger;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import lt.adient.mobility.eLPA.ws.SciilAPI;
import retrofit2.Retrofit;

public final class NetModule_ProvideSciilAPIFactory implements Factory<SciilAPI> {
  private final NetModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetModule_ProvideSciilAPIFactory(NetModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SciilAPI get() {
    return Preconditions.checkNotNull(
        module.provideSciilAPI(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SciilAPI> create(NetModule module, Provider<Retrofit> retrofitProvider) {
    return new NetModule_ProvideSciilAPIFactory(module, retrofitProvider);
  }
}
