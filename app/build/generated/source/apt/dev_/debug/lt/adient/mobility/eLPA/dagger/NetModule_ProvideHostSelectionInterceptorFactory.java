// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package lt.adient.mobility.eLPA.dagger;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import lt.adient.mobility.eLPA.ws.BaseUrlInterceptor;

public final class NetModule_ProvideHostSelectionInterceptorFactory
    implements Factory<BaseUrlInterceptor> {
  private final NetModule module;

  public NetModule_ProvideHostSelectionInterceptorFactory(NetModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public BaseUrlInterceptor get() {
    return Preconditions.checkNotNull(
        module.provideHostSelectionInterceptor(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<BaseUrlInterceptor> create(NetModule module) {
    return new NetModule_ProvideHostSelectionInterceptorFactory(module);
  }
}
