// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package lt.adient.mobility.eLPA.dagger;

import android.app.NotificationManager;
import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AndroidModule_ProvideNotificationManagerFactory
    implements Factory<NotificationManager> {
  private final AndroidModule module;

  private final Provider<Context> applicationContextProvider;

  public AndroidModule_ProvideNotificationManagerFactory(
      AndroidModule module, Provider<Context> applicationContextProvider) {
    assert module != null;
    this.module = module;
    assert applicationContextProvider != null;
    this.applicationContextProvider = applicationContextProvider;
  }

  @Override
  public NotificationManager get() {
    return Preconditions.checkNotNull(
        module.provideNotificationManager(applicationContextProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NotificationManager> create(
      AndroidModule module, Provider<Context> applicationContextProvider) {
    return new AndroidModule_ProvideNotificationManagerFactory(module, applicationContextProvider);
  }
}
