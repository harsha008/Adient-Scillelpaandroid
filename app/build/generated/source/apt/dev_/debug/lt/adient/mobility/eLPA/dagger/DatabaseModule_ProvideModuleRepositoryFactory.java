// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package lt.adient.mobility.eLPA.dagger;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import lt.adient.mobility.eLPA.database.DatabaseHelper;
import lt.adient.mobility.eLPA.database.ModuleRepository;

public final class DatabaseModule_ProvideModuleRepositoryFactory
    implements Factory<ModuleRepository> {
  private final DatabaseModule module;

  private final Provider<DatabaseHelper> databaseHelperProvider;

  public DatabaseModule_ProvideModuleRepositoryFactory(
      DatabaseModule module, Provider<DatabaseHelper> databaseHelperProvider) {
    assert module != null;
    this.module = module;
    assert databaseHelperProvider != null;
    this.databaseHelperProvider = databaseHelperProvider;
  }

  @Override
  public ModuleRepository get() {
    return Preconditions.checkNotNull(
        module.provideModuleRepository(databaseHelperProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ModuleRepository> create(
      DatabaseModule module, Provider<DatabaseHelper> databaseHelperProvider) {
    return new DatabaseModule_ProvideModuleRepositoryFactory(module, databaseHelperProvider);
  }
}
