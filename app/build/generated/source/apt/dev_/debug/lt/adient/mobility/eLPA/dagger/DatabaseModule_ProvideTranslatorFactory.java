// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package lt.adient.mobility.eLPA.dagger;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import lt.adient.mobility.eLPA.database.TranslationRepository;
import lt.adient.mobility.eLPA.utils.Translator;

public final class DatabaseModule_ProvideTranslatorFactory implements Factory<Translator> {
  private final DatabaseModule module;

  private final Provider<TranslationRepository> translationRepositoryProvider;

  public DatabaseModule_ProvideTranslatorFactory(
      DatabaseModule module, Provider<TranslationRepository> translationRepositoryProvider) {
    assert module != null;
    this.module = module;
    assert translationRepositoryProvider != null;
    this.translationRepositoryProvider = translationRepositoryProvider;
  }

  @Override
  public Translator get() {
    return Preconditions.checkNotNull(
        module.provideTranslator(translationRepositoryProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Translator> create(
      DatabaseModule module, Provider<TranslationRepository> translationRepositoryProvider) {
    return new DatabaseModule_ProvideTranslatorFactory(module, translationRepositoryProvider);
  }
}
